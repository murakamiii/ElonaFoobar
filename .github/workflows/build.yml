name: Build


on: pull_request


env:
  SDL_VIDEODRIVER: dummy
  SDL_AUDIODRIVER: disk
  CMAKE_BUILD_PARALLEL_LEVEL: 4


jobs:
  build-ubuntu:
    name: Build Elona foobar on Ubuntu
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install Dependencies
      run: |
        sudo add-apt-repository ppa:mhier/libboost-latest
        sudo apt update
        sudo apt install -y \
          g++-8 \
          libboost1.74-dev \
          liblua5.3-dev \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libsmpeg-dev \
          openssl \
          timidity

    - name: Cache Vanilla Elona
      uses: actions/cache@v1
      with:
        path: deps/elona
        key: elona122

    - name: Download Vanilla Elona
      run: |
        if [ ! -d deps/elona ]
        then
          wget --no-verbose "http://ylvania.style.coocan.jp/file/elona122.zip"
          unzip -qq elona122.zip -d deps
        fi

    - name: Test
      run: |
        make clean
        make tests VERBOSE=1
      env:
        CC: gcc-8
        CXX: g++-8


  build-macos:
    name: Build Elona foobar on macOS
    runs-on: macos-latest
    env:
      OPENSSL_ROOT_DIR: /usr/local/opt/openssl/

    steps:
    - uses: actions/checkout@v1

    - name: Install Dependencies
      run: |
        brew update
        brew install -f \
          boost \
          lua \
          sdl2 \
          sdl2_image \
          sdl2_mixer \
          sdl2_ttf

    - name: Cache Vanilla Elona
      uses: actions/cache@v1
      with:
        path: deps/elona
        key: elona122

    - name: Download Vanilla Elona
      run: |
        if [ ! -d deps/elona ]
        then
          wget --no-verbose "http://ylvania.style.coocan.jp/file/elona122.zip"
          unzip -qq elona122.zip -d deps
        fi

    - name: Test
      run: |
        make clean
        make tests VERBOSE=1

  clang-format:
    name: Run clang-format
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install Dependencies
      run: |
        brew update
        brew install -f \
          clang-format

    - name: Run clang-format
      run: |
        clang-format --version
        make format
